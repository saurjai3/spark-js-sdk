/*!
 * Copyright (c) 2015-2018 Cisco Systems, Inc. See LICENSE file.
 */

/* eslint-disable require-jsdoc */

import {find} from 'lodash';

import {SIP_URI} from '../constants';

import MeetingInfoRequest from './request';

function fetchInfo(meetingInfoList, id) {
  return find(
    this.meetingInfoList,
    (info) => info.sipUrl === id || info.locusId === id || info.userId === id || info.meetingLink === id
  );
}

class MeetingInfo {
  constructor({spark}) {
    this.spark = spark;
    this.request = new MeetingInfoRequest({spark: this.spark});

    this.meetingInfoList = {};
  }

  /**
   * @param {string} id
   * @returns {object}
   * @memberof MeetingInfo
   */
  get(id) {
    if (this.meetingInfoList[id]) {
      return this.meetingInfoList[id];
    }
    return fetchInfo(this.meetingInfoList, id);
  }

  /**
   * @param {string} id
   * @param {object} info
   * @returns {null}
   * @memberof MeetingInfo
   */
  set(id, info) {
    const meetingInfo = fetchInfo(this.meetingInfoList, id);
    if (meetingInfo) {
      this.meetingInfoList[meetingInfo.id] = info;
    }
    else {
      this.meetingInfoList[id] = info;
      this.meetingInfoList[id].id = id;
    }
  }

  getMeetingInfo(destination) {
    const options = {
      value: destination,
      type: SIP_URI
    };

    return this.request.meetingInfoRequest(options);
  }
}

export default MeetingInfo;
