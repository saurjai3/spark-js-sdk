/*!
 * Copyright (c) 2015-2018 Cisco Systems, Inc. See LICENSE file.
 */

/* eslint-disable require-jsdoc */

import {StatelessSparkPlugin} from '@ciscospark/spark-core';

import {SIP_URI, MEETINGS} from '../constants';

import MeetingInfoCollection from './collection';
import MeetingInfoRequest from './request';

export default class MeetingInfo extends StatelessSparkPlugin {
  constructor(attrs, options) {
    super({}, options);

    this.meetingInfoRequest = new MeetingInfoRequest({}, options);
  }

  /**
   * @param {string} id
   * @returns {object}
   * @memberof MeetingInfo
   */
  static getMeetingInfo(id) {
    return MeetingInfoCollection.get(id);
  }

  /**
   * @param {string} id
   * @param {object} info
   * @returns {null}
   * @memberof MeetingInfo
   */
  static setMeetingInfo(id, info) {
    MeetingInfoCollection.set(id, info);
  }

  fetchMeetingInfo(destination) {
    const options = {
      value: destination,
      type: SIP_URI
    };

    return this.meetingInfoRequest.fetchMeetingInfo(options).then((info) => this.setMeetingInfo(info.id, info));
  }
}
